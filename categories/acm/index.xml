<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ACM on Coder-Liuu&#39;Blog</title>
    <link>https://coder-liuu.github.io/categories/acm/</link>
    <description>Recent content in ACM on Coder-Liuu&#39;Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>CC BY 4.0 CN</copyright>
    <lastBuildDate>Sat, 27 Feb 2021 00:10:20 +0800</lastBuildDate>
    
        <atom:link href="https://coder-liuu.github.io/categories/acm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go语言学习笔记</title>
      <link>https://coder-liuu.github.io/2021/08/go%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Tue, 17 Aug 2021 23:42:18 +0800</pubDate>
      
      <guid>https://coder-liuu.github.io/2021/08/go%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>2021-8-17更新: 本文仅作尝试，记录一些用法，不做深入探究。 自己以前经常用Python，这次通过Go还是学习到了很多知识，比如反射，s</description>
    </item>
    
    <item>
      <title>回顾Aprioir算法</title>
      <link>https://coder-liuu.github.io/2021/08/review-aprioir/</link>
      <pubDate>Tue, 03 Aug 2021 14:24:13 +0800</pubDate>
      
      <guid>https://coder-liuu.github.io/2021/08/review-aprioir/</guid>
      <description>Apriori算法是经典的数据关联规则的算法，接下来让我们一起回顾Apriori算法吧！ 1. 算法背景 在沃尔玛超市中，商店人员发现购买尿布的人往</description>
    </item>
    
    <item>
      <title>机器学习中的数学笔记</title>
      <link>https://coder-liuu.github.io/2021/08/ml-interview/</link>
      <pubDate>Sun, 01 Aug 2021 11:45:54 +0800</pubDate>
      
      <guid>https://coder-liuu.github.io/2021/08/ml-interview/</guid>
      <description>如果问你为什么要学习数学，你回答“处理数字”，那么如果问你为什么要学习音乐，你的回答会是“处理音符“吗？ 1. 什么是梯度? 分析:辅导视频 答：首先</description>
    </item>
    
    <item>
      <title>启动盘神器Ventoy</title>
      <link>https://coder-liuu.github.io/2021/07/ventoy-tuition/</link>
      <pubDate>Sat, 31 Jul 2021 16:38:44 +0800</pubDate>
      
      <guid>https://coder-liuu.github.io/2021/07/ventoy-tuition/</guid>
      <description>还在苦恼一个U盘只能作为一个系统盘吗？不如试试Ventoy 1. 问题来源 在很早之前我一直使用Rufus来制作启动盘，但是其有个很大的问题，一个U</description>
    </item>
    
    <item>
      <title>健康保险的客户投保预测</title>
      <link>https://coder-liuu.github.io/2021/07/health-insure-predict/</link>
      <pubDate>Thu, 15 Jul 2021 16:01:25 +0800</pubDate>
      
      <guid>https://coder-liuu.github.io/2021/07/health-insure-predict/</guid>
      <description>机器学习竞赛赛题，常见的结构性数据比赛 一、题目简介 赛题背景:在一家保险公司里，通过保险公司的数据，预测一个人是否会对保险感兴趣。 数据示例: 评</description>
    </item>
    
    <item>
      <title>带噪音的手写数字识别</title>
      <link>https://coder-liuu.github.io/2021/07/noise-mnist/</link>
      <pubDate>Sat, 10 Jul 2021 12:00:53 +0800</pubDate>
      
      <guid>https://coder-liuu.github.io/2021/07/noise-mnist/</guid>
      <description>Oh，好久不更新，接下来说一说我最近的在做的其中的一个事情吧～ 问题描述: 给我2000张带噪音的手写数字图片，如下图所示。要求我训练一个模型，</description>
    </item>
    
    <item>
      <title>北京CCF-CSP考试</title>
      <link>https://coder-liuu.github.io/2021/07/album-ccf/</link>
      <pubDate>Fri, 02 Jul 2021 21:42:54 +0800</pubDate>
      
      <guid>https://coder-liuu.github.io/2021/07/album-ccf/</guid>
      <description>大三下开学去考试，大三下结束才想起来写博客&amp;hellip;(捂脸) 本文不会谈任何的算法，只谈风景，因为自己考的实在是太垃圾了(呜呜呜)。 前向</description>
    </item>
    
    <item>
      <title>图神经网络GNN</title>
      <link>https://coder-liuu.github.io/2021/06/%E5%9B%BE%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9Cgnn/</link>
      <pubDate>Mon, 07 Jun 2021 15:47:39 +0800</pubDate>
      
      <guid>https://coder-liuu.github.io/2021/06/%E5%9B%BE%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9Cgnn/</guid>
      <description>由于在论文中看到了GNN的东西，所以来简单记录一下。 GNN？图神经网络，听起来很高大上的东西，简单来说可以提取图中每个点的特征。故其的作用为</description>
    </item>
    
    <item>
      <title>Python 常忘函数</title>
      <link>https://coder-liuu.github.io/2021/05/python-forget-function/</link>
      <pubDate>Thu, 27 May 2021 21:11:06 +0800</pubDate>
      
      <guid>https://coder-liuu.github.io/2021/05/python-forget-function/</guid>
      <description>忽略警告 import warnings warnings.filterwarnings(&amp;quot;ignore&amp;quot;) Numpy 取消科学技术法() np.set_printoptions(suppress=True) 保留3位有效数字 np.set_printoptions(precision=3) 数组扁平 data.flatten() 填充NAN a[np.isnan(a)]=1 判断一列是否有缺失值 np.isnan(data).any(axis=0) 判断一行是否有缺失值 np.isnan(data).any(axis=1) Pandas 显示所有列 pd.set_option(&amp;lsquo;display.max_columns&amp;rsquo;, None) 显示</description>
    </item>
    
    <item>
      <title>Docker打包一个配置好Vim的Arch系统全过程(持续更新)</title>
      <link>https://coder-liuu.github.io/2021/05/docker-arch-nvim-process/</link>
      <pubDate>Sun, 16 May 2021 17:38:57 +0800</pubDate>
      
      <guid>https://coder-liuu.github.io/2021/05/docker-arch-nvim-process/</guid>
      <description>本文选择体积最小的Arch Linux作为Docker镜像开启全部过程,其他Linux发行版可能会有所区别 一、前期准备 使用该命令初始化pacm</description>
    </item>
    
    <item>
      <title>Docker使用总结</title>
      <link>https://coder-liuu.github.io/2021/04/docker-used/</link>
      <pubDate>Thu, 29 Apr 2021 13:35:44 +0800</pubDate>
      
      <guid>https://coder-liuu.github.io/2021/04/docker-used/</guid>
      <description>.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip{background:#e6f9e6}.icon-notice{display:inline-flex;align-self:center;margin-right:8px}.icon-notice img,.icon-notice svg{height:1em;width:1em;fill:currentColor}.icon-notice img,.icon-notice.baseline svg{top:0.125em;position:relative} Warning 文章更适合Arch系系统，比如Arch/Manjaro等系统，其他系统可能会有所不同 Docker基本安装 Pacman</description>
    </item>
    
    <item>
      <title>Linux使用Matplotlib画图中文字体问题</title>
      <link>https://coder-liuu.github.io/2021/04/linux%E4%BD%BF%E7%94%A8matplotlib%E7%94%BB%E5%9B%BE%E4%B8%AD%E6%96%87%E5%AD%97%E4%BD%93%E9%97%AE%E9%A2%98/</link>
      <pubDate>Thu, 22 Apr 2021 17:59:47 +0800</pubDate>
      
      <guid>https://coder-liuu.github.io/2021/04/linux%E4%BD%BF%E7%94%A8matplotlib%E7%94%BB%E5%9B%BE%E4%B8%AD%E6%96%87%E5%AD%97%E4%BD%93%E9%97%AE%E9%A2%98/</guid>
      <description>Linux的一大痛点，之前修复了一回，不过没有总结，这次总结一下，以便以后在遇到困难好解决。 前言 如果是Windows用户很好解决，直接在前面</description>
    </item>
    
    <item>
      <title>线性代数大纲</title>
      <link>https://coder-liuu.github.io/2021/04/math-linear-algebra/</link>
      <pubDate>Fri, 02 Apr 2021 17:50:12 +0800</pubDate>
      
      <guid>https://coder-liuu.github.io/2021/04/math-linear-algebra/</guid>
      <description>强烈吹捧此线代视频:点我出发 挑一些重要的写，方便后面复习 行列式 行列式性质 行列互换，行列式的值不变 对换行列式中两行的位置，行列式变号(推论：行</description>
    </item>
    
    <item>
      <title>不平衡数据集</title>
      <link>https://coder-liuu.github.io/2021/03/imbalanced-datasets/</link>
      <pubDate>Tue, 30 Mar 2021 22:16:40 +0800</pubDate>
      
      <guid>https://coder-liuu.github.io/2021/03/imbalanced-datasets/</guid>
      <description>直接下载(强烈推荐) 我已经传到CSDN上去了，不需要积分，点击出发 数据集说明如下所示: https://imbalanced-learn.org/stable/datasets/index.html#imbalanced-datasets-for-benchmark 最简单的使用 安装imblearn库 pip install imblearn 下载你需要的</description>
    </item>
    
    <item>
      <title>动手机器学习-实现逻辑回归</title>
      <link>https://coder-liuu.github.io/2021/03/ml-logisticregression/</link>
      <pubDate>Wed, 24 Mar 2021 19:03:39 +0800</pubDate>
      
      <guid>https://coder-liuu.github.io/2021/03/ml-logisticregression/</guid>
      <description>逻辑回归完整代码想抄作业的同学直接点这里 一、逻辑回归算法简介 逻辑回归又称对数几率回归 在线性回归模型中，我们学会了使用线性模型完成回归的问题，</description>
    </item>
    
    <item>
      <title>动手机器学习-实现线性回归</title>
      <link>https://coder-liuu.github.io/2021/03/ml-linearregression/</link>
      <pubDate>Fri, 19 Mar 2021 11:07:40 +0800</pubDate>
      
      <guid>https://coder-liuu.github.io/2021/03/ml-linearregression/</guid>
      <description>线性回归完整代码想抄作业的同学直接点这里 岭回归完整代码想抄作业的同学直接点这里 一、线性回归算法简介 线性回归是经典的回归算法 线性回归是通过属性</description>
    </item>
    
    <item>
      <title>动手机器学习-&gt;实现KMeans算法</title>
      <link>https://coder-liuu.github.io/2021/03/ml-kmeans/</link>
      <pubDate>Mon, 15 Mar 2021 12:35:36 +0800</pubDate>
      
      <guid>https://coder-liuu.github.io/2021/03/ml-kmeans/</guid>
      <description>KMeans完整代码想抄作业的同学直接点这里 一、KMeans算法简介 KMeans是经典的聚类算法 假设要在一个新的城市中，开几个大型商场，应该</description>
    </item>
    
    <item>
      <title>Linux下使用dd命令制作启动盘</title>
      <link>https://coder-liuu.github.io/2021/03/linux-dd/</link>
      <pubDate>Thu, 04 Mar 2021 15:17:14 +0800</pubDate>
      
      <guid>https://coder-liuu.github.io/2021/03/linux-dd/</guid>
      <description>正文 Linux也可以制作U盘启动盘,而且不需要使用其他外部工具,非常简单 使用命令sudo fdisk -l,找到自己U盘 执行结果中一般最后一个Disk是</description>
    </item>
    
    <item>
      <title>留言板</title>
      <link>https://coder-liuu.github.io/guestbook/</link>
      <pubDate>Thu, 04 Mar 2021 01:16:00 +0800</pubDate>
      
      <guid>https://coder-liuu.github.io/guestbook/</guid>
      <description>茫茫人海，有缘相聚在这里，不如留下你的足迹吧! 躺平中，随缘更新～ 测试 var gitalk = new Gitalk({ clientID: &#39;aab88ce03a8d50c6128f&#39;, clientSecret: &#39;1ac9ba0e3f9cefa8aac6414eb40dfed80545c021&#39;, repo: &#39;Coder-liuu.github.io&#39;, owner: &#34;Coder-Liuu&#34;, admin: &#34;Coder-Liuu&#34;, id: &#39;about&#39;, }) gitalk.render(&#39;gitalk-container&#39;);</description>
    </item>
    
    <item>
      <title>相册</title>
      <link>https://coder-liuu.github.io/album/</link>
      <pubDate>Thu, 04 Mar 2021 01:16:00 +0800</pubDate>
      
      <guid>https://coder-liuu.github.io/album/</guid>
      <description>北京 北京CCF-CSP考试</description>
    </item>
    
  </channel>
</rss>
