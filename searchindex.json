{"categories":[{"title":"默认分类","uri":"https://coder-liuu.github.io/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"}],"posts":[{"content":"一、 用Python第三方库virtualenv创建虚拟环境 这种方式是最原始最简单的一种方式.个人经常使用\n1. 安装方式 pip install virtualenv # python2 pip3 install virtualenv # python3  2.创建虚拟环境 virtualenv [虚拟环境的名字]  .notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip{background:#e6f9e6}.icon-notice{display:inline-flex;align-self:center;margin-right:8px}.icon-notice img,.icon-notice svg{height:1em;width:1em;fill:currentColor}.icon-notice img,.icon-notice.baseline svg{top:0.125em;position:relative} Tip\n这个虚拟环境会在你所在的目录生成，这里建议将所有的虚拟环境放在同一个目录下，容易管理\n 3.进入退出虚拟环境 linux进入虚拟环境 source /path/to/virtualenv/bin/activate\nlinux退出虚拟环境 deactivate\n4.安装所需的第三方库 当你进入虚拟环境，使用方式和pip的使用方法就都是一样的了。例如安装numpy库就是这样的命令pip3 install numpy\n二、用Anaconda创建虚拟环境 这种方式是的优点是自动管理虚拟环境的目录，缺点就是安装的时候有点慢。 Warning\nconda是Anaconda里的一个工具，只有安装了Anaconda才会有的。\n 1. 创建虚拟环境 conda create -n ENV python==3.6  2. 激活/退出虚拟环境 激活虚拟环境 conda activate ENV\n退出虚拟环境 conda deactivate\n3. 安装所需的第三方库 conda install -n ENV [package]\n4. 查看conda环境下所有的虚拟环境 conda info --envs\n参考博客 https://www.cnblogs.com/shyern/p/11284127.html\nhttps://www.cnblogs.com/shuaiyin/p/10922467.html\n","id":0,"section":"posts","summary":"一、 用Python第三方库virtualenv创建虚拟环境 这种方式是最原始最简单的一种方式.个人经常使用 1. 安装方式 pip install virtualenv # python2 pip3 install virtualenv # python3 2.创","tags":null,"title":"Python-创建虚拟环境","uri":"https://coder-liuu.github.io/2020/04/python-create-vir/","year":"2020"},{"content":"最常用篇   初始化git仓库 git init\n  添加修改 git add .\n  删除git仓库,只需要删除本地的文件就可以了 rm -rf .git\n  查看当前仓库的状态 git status\n  丢弃工作区的改动 git restore \u0026lt;文件\u0026gt;\n  回滚撤回提交操作 git reset\n  告诉Git你是谁 git config --global user.name \u0026quot;Liu Yang\u0026quot;\n  提交东西 git commit -m \u0026quot;some describle\u0026quot; 如果这时候没有-m 和后面的东西将进入一个界面然后可以继续写自己的描述，修改后自动被提交\n  .notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip{background:#e6f9e6}.icon-notice{display:inline-flex;align-self:center;margin-right:8px}.icon-notice img,.icon-notice svg{height:1em;width:1em;fill:currentColor}.icon-notice img,.icon-notice.baseline svg{top:0.125em;position:relative} Tip\ngit commit \u0026ndash;amend 可以将这次提交追加到上一次提交中去，减少不必要的提交\n   配置默认编辑器git config --global core.editor nvim\n  让Git忽略一些东西，不被追踪 首先先新建一个文件.gitignore，然后将要忽略的文件写在上面就好了\n  让Git停止跟踪一个文件 git rm --cached ×××××\n  Git回滚篇   查看日志 git log\n  回滚到指定版本 git reset --hard id\n  回滚后看全部的历史提交记录 git reflog\n  删除git commit记录 git rebase -i xxxxxx(提交记录id),然后进入一个vim界面，把想删除的pick,改成drop保存退出，提交记录就没有了\n  高级篇   列出本地分支 git branch\n  添加一个分支 git branch xx(xx为分支名)\n  切换分支 git checkout xx(xx为分支名)\n  合并分支 git merge xx(xx为分支名)\n  添加远程仓库 git remote add origin xxx(xxx为网址)\n  解除远程仓库 git remote remove origin\n  提交到远程仓库里 git push --set-upstream origin master (!!! 本地至少的提交一次)\n  克隆仓库 git clone xxx(xxx为网址)\n  让Git记住你的帐号密码 git config credential.helper store\n  更新仓库,别人帮你做过修改，然后来更新自己的本地文件 git pull\n  在Github仓库的设置中可以邀请伙伴一起完成项目。\n  Git 查看自己的远程仓库git remote -v\n  推荐教程 猴子教程 官方的中文文档\n","id":1,"section":"posts","summary":"最常用篇 初始化git仓库 git init 添加修改 git add . 删除git仓库,只需要删除本地的文件就可以了 rm -rf .git 查看当前仓库的状态 git status 丢弃工作区的改动 git restore \u0026lt","tags":null,"title":"Git命令总结","uri":"https://coder-liuu.github.io/2020/04/git-summary/","year":"2020"}],"tags":[]}